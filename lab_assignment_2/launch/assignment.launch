<?xml version="1.0"?>
<launch>

  <!-- Gazebo -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find lab_assignment_2)/worlds/assignment2.world"/>
    
	    
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/> 
    <arg name="recording" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <!-- RViz -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find rosbot_description)/rviz/rosbot.rviz" required="true" output="screen"/>
  
  <include file="$(find rosbot_bringup)/launch/rosbot_gazebo.launch"/>

  <node pkg="lab_assignment_2" type="logic_node" name="logic_node"/>

  <node pkg="move_base" type="move_base" name="move_base"/>

  <!-- arguments -->
  <arg name="domain_path" default="$(find lab_assignment_2)/common/domain.pddl" />
  <arg name="problem_path" default="$(find lab_assignment_2)/common/problem.pddl" />

  <!-- knowledge base -->
  <node name="rosplan_knowledge_base" pkg="rosplan_knowledge_base" type="knowledgeBase" respawn="false" output="screen">
    <param name="domain_path" value="$(arg domain_path)" />
    <param name="problem_path" value="$(arg problem_path)" />
    <!-- conditional planning flags -->
    <param name="use_unknowns" value="false" />
  </node>
  
  <!-- problem generation -->
  <include file="$(find rosplan_planning_system)/launch/includes/problem_interface.launch">
    <arg name="knowledge_base" value="rosplan_knowledge_base" />
    <arg name="domain_path" value="$(arg domain_path)" />
    <arg name="problem_path" value="$(find lab_assignment_2)/common/new_problem.pddl" />
    <arg name="problem_topic" value="problem_instance" />
  </include>

  <!-- planning -->
  <include file="$(find rosplan_planning_system)/launch/includes/planner_interface.launch">
    <arg name="use_problem_topic" value="true" />
    <arg name="problem_topic" value="/rosplan_problem_interface/problem_instance" />
    <arg name="planner_topic" value="planner_output" />
    <arg name="domain_path" value="$(arg domain_path)" />
    <arg name="data_path" value="$(find lab_assignment_2)/common/" />
    <arg name="planner_command" value="timeout 10 $(find rosplan_planning_system)/common/bin/popf DOMAIN PROBLEM" />
  </include>

  <!-- parsing interface -->
  <node name="rosplan_parsing_interface" pkg="rosplan_planning_system" type="pddl_simple_plan_parser" respawn="false" output="screen">
    <param name="knowledge_base" value="rosplan_knowledge_base" />
    <param name="planner_topic" value="/rosplan_planner_interface/planner_output" />
    <param name="plan_topic" value="complete_plan" />
  </node>

  <!-- plan dispatcher -->
  <node name="rosplan_plan_dispatcher" pkg="rosplan_planning_system" type="pddl_simple_plan_dispatcher" respawn="false" output="screen">
    <param name="knowledge_base" value="rosplan_knowledge_base" />
    <param name="plan_topic" value="/rosplan_parsing_interface/complete_plan" />
    <param name="action_dispatch_topic" value="action_dispatch" />
    <param name="action_feedback_topic" value="action_feedback" />
  </node>
</launch>
